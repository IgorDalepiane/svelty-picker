.std-calendar-wrap.svelte-1up2u1m{width:280px;background-color:white;box-shadow:0 1px 6px #ccc;border-radius:4px;padding:0.25rem 0.25rem 0.5rem}.std-calendar-wrap.is-popup.svelte-1up2u1m{box-shadow:0 1px 6px #ccc}.std-btn-row.svelte-1up2u1m{margin-top:0.5rem;display:flex;justify-content:space-evenly}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */.sdt-cal-td.svelte-fq8uva.svelte-fq8uva{padding:0;font-size:90%;text-align:center}.sdt-calendar.svelte-fq8uva.svelte-fq8uva{padding-top:0.5rem}.sdt-table.svelte-fq8uva.svelte-fq8uva{width:100%}.sdt-today.svelte-fq8uva.svelte-fq8uva{color:red}.not-current.svelte-fq8uva.svelte-fq8uva{color:#ccc}.std-btn.svelte-fq8uva.svelte-fq8uva{border:0;background:transparent;text-align:center;width:100%;border-radius:4px;cursor:pointer;padding:0.375rem}.std-btn[disabled].svelte-fq8uva.svelte-fq8uva{cursor:not-allowed;opacity:0.35}.std-btn-header.svelte-fq8uva.svelte-fq8uva{width:auto;font-weight:bold;padding:0.375rem 0.5rem}.std-btn-header.icon-btn.svelte-fq8uva.svelte-fq8uva:first-of-type{padding-left:0.375rem;padding-right:0.375rem}.std-btn-header.icon-btn.svelte-fq8uva.svelte-fq8uva{padding-left:0.25rem;padding-right:0.25rem}.std-btn.svelte-fq8uva.svelte-fq8uva:hover{background-color:#eee;border-color:#ddd}.is-selected.svelte-fq8uva .std-btn.svelte-fq8uva{background-color:#286090;border-color:#204d74;color:white;opacity:0.9}.std-btn-header.svelte-fq8uva.svelte-fq8uva:hover{background-color:rgb(223, 223, 223);color:black}.sdt-time-icon.svelte-fq8uva.svelte-fq8uva{margin-right:-4px}.sdt-time-icon.svelte-fq8uva svg.svelte-fq8uva{margin:4px 0}.sdt-tbody-lg.svelte-fq8uva .std-btn.svelte-fq8uva{height:60px}.sdt-thead-nav.svelte-fq8uva.svelte-fq8uva{display:flex}.sdt-nav-btns.svelte-fq8uva.svelte-fq8uva{white-space:nowrap}.sdt-toggle-btn.svelte-fq8uva.svelte-fq8uva{width:100%;text-align:left}.sdt-today.svelte-fq8uva.svelte-fq8uva:before{position:absolute;content:'';margin-left:4px;margin-top:4px;border-left:4px solid #ccc;border-top:4px solid #ccc;border-bottom:4px solid transparent;border-right:4px solid transparent;border-radius:2px;height:4px;z-index:2}.sdt-today.svelte-fq8uva.svelte-fq8uva:hover:before{border-left-color:#286090;border-top-color:#286090}.is-selected.sdt-today.svelte-fq8uva.svelte-fq8uva:before{border-left-color:#eee;border-top-color:#eee}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */.sdt-timer.svelte-1xoqn6e.svelte-1xoqn6e{position:relative;width:272px}.sdt-time-head.svelte-1xoqn6e.svelte-1xoqn6e{position:relative;display:flex;justify-content:center;align-items:center}.sdt-time-figure.svelte-1xoqn6e.svelte-1xoqn6e{font-size:1.5rem;font-weight:bold}.sdt-clock.svelte-1xoqn6e.svelte-1xoqn6e{margin:auto;position:relative;width:260px;height:260px;background-color:#eeeded;border-radius:50%;transition:background-color 0.3s}.sdt-clock.is-minute-view.svelte-1xoqn6e.svelte-1xoqn6e{background-color:rgb(238, 237, 237, 0.25);box-shadow:0 0 128px 2px #ddd inset}.sdt-time-btn.svelte-1xoqn6e.svelte-1xoqn6e{border:0;background:transparent;text-align:center;border-radius:4px;cursor:pointer;padding:0.375rem}.sdt-time-btn.svelte-1xoqn6e.svelte-1xoqn6e:not(.is-active){opacity:0.5}.sdt-time-btn.svelte-1xoqn6e.svelte-1xoqn6e:hover{background-color:rgb(223, 223, 223);color:black}.sdt-back-btn.svelte-1xoqn6e.svelte-1xoqn6e{position:absolute;top:0;left:0;opacity:1 !important}.sdt-meridian.svelte-1xoqn6e.svelte-1xoqn6e{position:absolute;top:0.25rem;right:0.25rem;display:flex;flex-flow:column;font-size:90%}.sdt-meridian.svelte-1xoqn6e .sdt-time-btn.svelte-1xoqn6e{padding:0.15rem 0.5rem}.sdt-meridian.svelte-1xoqn6e .sdt-time-btn.is-active.svelte-1xoqn6e{font-weight:bold}.sdt-middle-dot.svelte-1xoqn6e.svelte-1xoqn6e{left:50%;top:50%;width:6px;height:6px;position:absolute;transform:translate(-50%, -50%);background-color:#286090;border-radius:50%}.sdt-hand-pointer.svelte-1xoqn6e.svelte-1xoqn6e{width:2px;height:calc(40% + 1px);bottom:50%;left:calc(50% - 1px);position:absolute;background-color:#286090;transform-origin:center bottom 0;transition:transform 0.2s ease, height 0.15s ease}.sdt-hand-circle.svelte-1xoqn6e.svelte-1xoqn6e{left:-15px;top:-21px;position:relative;width:4px;height:4px;background-color:transparent;border:14px solid #286090;border-radius:50%;box-sizing:content-box}.sdt-tick.svelte-1xoqn6e.svelte-1xoqn6e{position:absolute;width:30px;height:30px;border-width:0;transform:translate(-50%, -50%);text-align:center;border-radius:50%;line-height:28px;cursor:pointer;background-color:transparent}.sdt-tick.is-selected.svelte-1xoqn6e.svelte-1xoqn6e{background-color:#286090;color:#fff}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */